{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Projetos\\\\FFStats2.0\\\\Front\\\\FFStats-App\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet JogadoresListaComponent = class JogadoresListaComponent {\n  constructor(jogadorService, modalService, toastr, spinner, estatisticaService, router) {\n    this.jogadorService = jogadorService;\n    this.modalService = modalService;\n    this.toastr = toastr;\n    this.spinner = spinner;\n    this.estatisticaService = estatisticaService;\n    this.router = router;\n    this.jogadores = [];\n    this.jogadoresFiltrados = [];\n    this._filtroLista = '';\n    this.estatistica = [];\n    this.totalKill = [];\n    this.JogadorId = 0;\n  }\n\n  get filtroLista() {\n    return this._filtroLista;\n  }\n\n  set filtroLista(value) {\n    this._filtroLista = value;\n    this.jogadoresFiltrados = this.filtroLista ? this.filtrarJogador(this.filtroLista) : this.jogadores;\n  }\n\n  filtrarJogador(filtrarPor) {\n    filtrarPor = filtrarPor.toLowerCase();\n    return this.jogadores.filter(jogador => jogador.jogadorNome.toLowerCase().indexOf(filtrarPor) !== -1 || jogador.jogadorNick.toLowerCase().indexOf(filtrarPor) !== -1);\n  }\n\n  ngOnInit() {\n    this.spinner.show();\n    this.getJogadores(); //this.getEstatisticas();\n  }\n\n  getJogadores() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this.jogadores = yield _this.jogadorService.getJogadores().toPromise(); // Loop sobre os jogadores\n\n        for (const jogador of _this.jogadores) {\n          jogador.estatisticas = yield _this.estatisticaService.getEstatisticasByJogadorId(jogador.id).toPromise();\n        }\n\n        _this.jogadoresFiltrados = _this.jogadores;\n      } catch (error) {\n        _this.spinner.hide();\n\n        _this.toastr.error(\"Erro ao carregar Jogadores\", \"Erro!\");\n      } finally {\n        _this.spinner.hide();\n      }\n    })();\n  } // public getJogadores(): void {\n  //   this.jogadorService.getJogadores().subscribe({\n  //     next: (_jogadores: Jogador[]) => {\n  //       this.jogadores = _jogadores;\n  //       // Loop sobre os jogadores\n  //       for (const jogador of this.jogadores) {\n  //         this.estatisticaService.getEstatisticasByJogadorId(jogador.id).subscribe({\n  //           next: (estatisticas: Estatistica[]) => {\n  //             jogador.estatisticas = estatisticas;\n  //           },\n  //           error: (error: any) => {\n  //             this.toastr.error(\"Erro ao carregar estatÃ­sticas do jogador\", \"Erro!\");\n  //           }\n  //         });\n  //       }\n  //       this.jogadoresFiltrados = this.jogadores;\n  //     },\n  //     error: (error: any) => {\n  //       this.spinner.hide();\n  //       this.toastr.error(\"Erro ao carregar Jogadores\", \"Erro!\");\n  //     },\n  //     complete: () => this.spinner.hide()\n  //   });\n  // }\n  // public getEstatisticas(): void{\n  //   this.estatisticaService.getEstatisticasByJogadorId().subscribe({\n  //     next: (_estatisticas: Estatistica[] ) => {\n  //       this.estatistica = _estatisticas;\n  //     },\n  //     error: (error: any)=> {\n  //       this.spinner.hide(),\n  //       this.toastr.error(\"Erro ao carregar Estatisticaes\",\"Erro!\")\n  //     },\n  //     complete: () => this.spinner.hide()\n  //   })\n  // }\n\n\n  carregaKIll() {\n    for (let i = 0; i <= this.estatistica.length; i++) {\n      this.totalKill[i] = this.estatistica.filter(e => e.jogadorId == i).reduce((a, b) => a + b.kill, 0);\n    }\n  }\n\n  openModal(event, template, id) {\n    event.stopPropagation();\n    this.JogadorId = id;\n    this.modalRef = this.modalService.show(template, {\n      class: 'modal-sm'\n    });\n  }\n\n  confirm() {\n    var _a;\n\n    (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.hide();\n    this.spinner.show();\n    this.jogadorService.deleteJogador(this.JogadorId).subscribe(result => {\n      console.log(result);\n      this.toastr.success('Partida excluida com sucesso!', 'Sucesso!');\n      this.spinner.hide();\n      this.getJogadores();\n    }, error => {\n      //console.error(error);\n      this.toastr.error('Erro ao tentar deletar o Evento', 'Erro:');\n      this.spinner.hide();\n    }, () => this.spinner.hide());\n  }\n\n  decline() {\n    var _a;\n\n    (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.hide();\n  }\n\n  detalheJogador(id) {\n    this.router.navigate([`jogadores/detalhes/${id}`]);\n  }\n\n  calculaKD(a, b) {\n    return b / a;\n  }\n\n};\nJogadoresListaComponent = __decorate([Component({\n  selector: 'app-jogadores-lista',\n  templateUrl: './jogadores-lista.component.html',\n  styleUrls: ['./jogadores-lista.component.scss']\n})], JogadoresListaComponent);\nexport { JogadoresListaComponent };","map":{"version":3,"sources":["D:/Projetos/FFStats2.0/Front/FFStats-App/src/app/Components/Jogadores/jogadores-lista/jogadores-lista.component.ts"],"names":["__decorate","Component","JogadoresListaComponent","constructor","jogadorService","modalService","toastr","spinner","estatisticaService","router","jogadores","jogadoresFiltrados","_filtroLista","estatistica","totalKill","JogadorId","filtroLista","value","filtrarJogador","filtrarPor","toLowerCase","filter","jogador","jogadorNome","indexOf","jogadorNick","ngOnInit","show","getJogadores","toPromise","estatisticas","getEstatisticasByJogadorId","id","error","hide","carregaKIll","i","length","e","jogadorId","reduce","a","b","kill","openModal","event","template","stopPropagation","modalRef","class","confirm","_a","deleteJogador","subscribe","result","console","log","success","decline","detalheJogador","navigate","calculaKD","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nlet JogadoresListaComponent = class JogadoresListaComponent {\r\n    constructor(jogadorService, modalService, toastr, spinner, estatisticaService, router) {\r\n        this.jogadorService = jogadorService;\r\n        this.modalService = modalService;\r\n        this.toastr = toastr;\r\n        this.spinner = spinner;\r\n        this.estatisticaService = estatisticaService;\r\n        this.router = router;\r\n        this.jogadores = [];\r\n        this.jogadoresFiltrados = [];\r\n        this._filtroLista = '';\r\n        this.estatistica = [];\r\n        this.totalKill = [];\r\n        this.JogadorId = 0;\r\n    }\r\n    get filtroLista() {\r\n        return this._filtroLista;\r\n    }\r\n    set filtroLista(value) {\r\n        this._filtroLista = value;\r\n        this.jogadoresFiltrados = this.filtroLista ? this.filtrarJogador(this.filtroLista) : this.jogadores;\r\n    }\r\n    filtrarJogador(filtrarPor) {\r\n        filtrarPor = filtrarPor.toLowerCase();\r\n        return this.jogadores.filter((jogador) => jogador.jogadorNome.toLowerCase().indexOf(filtrarPor) !== -1 ||\r\n            jogador.jogadorNick.toLowerCase().indexOf(filtrarPor) !== -1);\r\n    }\r\n    ngOnInit() {\r\n        this.spinner.show();\r\n        this.getJogadores();\r\n        //this.getEstatisticas();\r\n    }\r\n    async getJogadores() {\r\n        try {\r\n            this.jogadores = await this.jogadorService.getJogadores().toPromise();\r\n            // Loop sobre os jogadores\r\n            for (const jogador of this.jogadores) {\r\n                jogador.estatisticas = await this.estatisticaService.getEstatisticasByJogadorId(jogador.id).toPromise();\r\n            }\r\n            this.jogadoresFiltrados = this.jogadores;\r\n        }\r\n        catch (error) {\r\n            this.spinner.hide();\r\n            this.toastr.error(\"Erro ao carregar Jogadores\", \"Erro!\");\r\n        }\r\n        finally {\r\n            this.spinner.hide();\r\n        }\r\n    }\r\n    // public getJogadores(): void {\r\n    //   this.jogadorService.getJogadores().subscribe({\r\n    //     next: (_jogadores: Jogador[]) => {\r\n    //       this.jogadores = _jogadores;\r\n    //       // Loop sobre os jogadores\r\n    //       for (const jogador of this.jogadores) {\r\n    //         this.estatisticaService.getEstatisticasByJogadorId(jogador.id).subscribe({\r\n    //           next: (estatisticas: Estatistica[]) => {\r\n    //             jogador.estatisticas = estatisticas;\r\n    //           },\r\n    //           error: (error: any) => {\r\n    //             this.toastr.error(\"Erro ao carregar estatÃ­sticas do jogador\", \"Erro!\");\r\n    //           }\r\n    //         });\r\n    //       }\r\n    //       this.jogadoresFiltrados = this.jogadores;\r\n    //     },\r\n    //     error: (error: any) => {\r\n    //       this.spinner.hide();\r\n    //       this.toastr.error(\"Erro ao carregar Jogadores\", \"Erro!\");\r\n    //     },\r\n    //     complete: () => this.spinner.hide()\r\n    //   });\r\n    // }\r\n    // public getEstatisticas(): void{\r\n    //   this.estatisticaService.getEstatisticasByJogadorId().subscribe({\r\n    //     next: (_estatisticas: Estatistica[] ) => {\r\n    //       this.estatistica = _estatisticas;\r\n    //     },\r\n    //     error: (error: any)=> {\r\n    //       this.spinner.hide(),\r\n    //       this.toastr.error(\"Erro ao carregar Estatisticaes\",\"Erro!\")\r\n    //     },\r\n    //     complete: () => this.spinner.hide()\r\n    //   })\r\n    // }\r\n    carregaKIll() {\r\n        for (let i = 0; i <= this.estatistica.length; i++) {\r\n            this.totalKill[i] = this.estatistica.filter(e => e.jogadorId == i).reduce((a, b) => a + b.kill, 0);\r\n        }\r\n    }\r\n    openModal(event, template, id) {\r\n        event.stopPropagation();\r\n        this.JogadorId = id;\r\n        this.modalRef = this.modalService.show(template, { class: 'modal-sm' });\r\n    }\r\n    confirm() {\r\n        var _a;\r\n        (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.hide();\r\n        this.spinner.show();\r\n        this.jogadorService.deleteJogador(this.JogadorId).subscribe((result) => {\r\n            console.log(result);\r\n            this.toastr.success('Partida excluida com sucesso!', 'Sucesso!');\r\n            this.spinner.hide();\r\n            this.getJogadores();\r\n        }, (error) => {\r\n            //console.error(error);\r\n            this.toastr.error('Erro ao tentar deletar o Evento', 'Erro:');\r\n            this.spinner.hide();\r\n        }, () => this.spinner.hide());\r\n    }\r\n    decline() {\r\n        var _a;\r\n        (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.hide();\r\n    }\r\n    detalheJogador(id) {\r\n        this.router.navigate([`jogadores/detalhes/${id}`]);\r\n    }\r\n    calculaKD(a, b) {\r\n        return b / a;\r\n    }\r\n};\r\nJogadoresListaComponent = __decorate([\r\n    Component({\r\n        selector: 'app-jogadores-lista',\r\n        templateUrl: './jogadores-lista.component.html',\r\n        styleUrls: ['./jogadores-lista.component.scss']\r\n    })\r\n], JogadoresListaComponent);\r\nexport { JogadoresListaComponent };\r\n"]},"metadata":{},"sourceType":"module"}