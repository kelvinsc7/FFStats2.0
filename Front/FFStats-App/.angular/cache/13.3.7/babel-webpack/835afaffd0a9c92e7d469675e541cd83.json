{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/Services/mapa.service\";\nimport * as i4 from \"@app/Services/call.service\";\nimport * as i5 from \"ngx-spinner\";\nimport * as i6 from \"ngx-toastr\";\nimport * as i7 from \"@angular/common\";\n\nfunction CallDetalhesComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Campo Obrigat\\u00F3rio\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CallDetalhesComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Minimo de 4 caracteres\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CallDetalhesComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Maximo de 25 Caracteres\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CallDetalhesComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const map_r5 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", map_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", map_r5.mapaNome, \"\");\n  }\n}\n\nfunction CallDetalhesComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 17);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport let CallDetalhesComponent = /*#__PURE__*/(() => {\n  class CallDetalhesComponent {\n    constructor(fb, router, mapaService, callService, spiner, toaster) {\n      this.fb = fb;\n      this.router = router;\n      this.mapaService = mapaService;\n      this.callService = callService;\n      this.spiner = spiner;\n      this.toaster = toaster;\n      this.mapas = [];\n      this.calls = {};\n      this.modeSave = 'postCall';\n      this.isLoading = false;\n    }\n\n    get f() {\n      return this.form.controls;\n    }\n\n    carregaDados() {\n      const dadosIdParam = this.router.snapshot.paramMap.get('id');\n\n      if (dadosIdParam !== null) {\n        this.spiner.show();\n        this.modeSave = 'putCall';\n        this.callService.getCallById(+dadosIdParam).subscribe(call => {\n          this.calls = Object.assign({}, call);\n          this.form.patchValue(this.calls);\n        }, () => {\n          console.error(Error);\n          this.toaster.error('Erro ao carregar a call', 'Erro!');\n          this.spiner.hide();\n        }).add(() => {\n          this.spiner.hide();\n        });\n      }\n    }\n\n    getMapas() {\n      this.mapaService.getMapas().subscribe(mapa => {\n        this.mapas = mapa;\n      }, error => {});\n    }\n\n    ngOnInit() {\n      this.getMapas();\n      this.carregaDados();\n      this.validation();\n    }\n\n    validation() {\n      this.form = this.fb.group({\n        callCidade: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(25)]],\n        mapaId: ['', [Validators.required]]\n      });\n    }\n\n    resetForm() {\n      this.form.reset();\n    }\n\n    salvarAlteracao() {\n      this.isLoading = true;\n      this.spiner.show();\n\n      if (this.form.valid) {\n        this.calls = this.modeSave === 'postCall' ? Object.assign({}, this.form.value) : Object.assign({\n          id: this.calls.id\n        }, this.form.value);\n        this.callService[this.modeSave](this.calls).subscribe(() => this.toaster.success('Call Salva com Sucesso', 'Sucesso!'), error => {\n          console.error(error);\n          this.toaster.error('Erro ao salvar a Call', 'Error');\n        }).add(() => this.spiner.hide());\n      }\n\n      this.isLoading = false;\n    }\n\n  }\n\n  CallDetalhesComponent.ɵfac = function CallDetalhesComponent_Factory(t) {\n    return new (t || CallDetalhesComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MapaService), i0.ɵɵdirectiveInject(i4.CallService), i0.ɵɵdirectiveInject(i5.NgxSpinnerService), i0.ɵɵdirectiveInject(i6.ToastrService));\n  };\n\n  CallDetalhesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CallDetalhesComponent,\n    selectors: [[\"app-call-detalhes\"]],\n    decls: 27,\n    vars: 10,\n    consts: [[1, \"card\", \"rounded\", \"shadow-md\"], [3, \"formGroup\"], [1, \"p-3\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-6\"], [\"type\", \"text\", \"formControlName\", \"callCidade\", \"placeholder\", \"Insira o Nome\", 1, \"form-control\", \"is-invalid\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"multiselect\", \"formControlName\", \"mapaId\", 1, \"form-control\", \"form-select\"], [\"value\", \"0\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"card-footer\"], [1, \"d-flex\"], [1, \"btn\", \"btn-outline-secondary\", \"mr-auto\", \"border\", 3, \"click\"], [1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [3, \"value\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n    template: function CallDetalhesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"label\")(6, \"strong\");\n        i0.ɵɵtext(7, \"Nome da Cidade\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵtemplate(9, CallDetalhesComponent_div_9_Template, 2, 0, \"div\", 6);\n        i0.ɵɵtemplate(10, CallDetalhesComponent_div_10_Template, 2, 0, \"div\", 6);\n        i0.ɵɵtemplate(11, CallDetalhesComponent_div_11_Template, 2, 0, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\")(14, \"strong\");\n        i0.ɵɵtext(15, \"Selecione o mapa\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"select\", 7)(17, \"option\", 8);\n        i0.ɵɵtext(18, \"Selecione uma Line\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, CallDetalhesComponent_option_19_Template, 2, 2, \"option\", 9);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(20, \"div\", 10)(21, \"div\", 11)(22, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function CallDetalhesComponent_Template_button_click_22_listener() {\n          return ctx.resetForm();\n        });\n        i0.ɵɵtext(23, \" Cancelar Altera\\u00E7\\u00E3o \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function CallDetalhesComponent_Template_button_click_24_listener() {\n          return ctx.salvarAlteracao();\n        });\n        i0.ɵɵtemplate(25, CallDetalhesComponent_span_25_Template, 1, 0, \"span\", 14);\n        i0.ɵɵtext(26, \" Salvar \");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.f.callCidade.errors && ctx.f.callCidade.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.f.callCidade.errors == null ? null : ctx.f.callCidade.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.f.callCidade.errors == null ? null : ctx.f.callCidade.errors.minlength);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.f.callCidade.errors == null ? null : ctx.f.callCidade.errors.maxlength);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.mapas);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i7.NgClass, i7.NgIf, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i7.NgForOf],\n    styles: [\"\"]\n  });\n  return CallDetalhesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}