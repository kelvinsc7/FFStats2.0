{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/Services/configuracao.service\";\nimport * as i2 from \"ngx-spinner\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"../../../shared/Titulo/Titulo.component\";\nimport * as i5 from \"@angular/common\";\n\nfunction ConfiguracaoComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"h5\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 6)(5, \"input\", 7);\n    i0.ɵɵlistener(\"change\", function ConfiguracaoComponent_div_3_Template_input_change_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const config_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.toggleAtivo(config_r1);\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const config_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(config_r1.nome);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", config_r1.ativo);\n  }\n}\n\nexport let ConfiguracaoComponent = /*#__PURE__*/(() => {\n  class ConfiguracaoComponent {\n    constructor(configuracaoService, spiner, toaster) {\n      this.configuracaoService = configuracaoService;\n      this.spiner = spiner;\n      this.toaster = toaster;\n      this.configuracoes = [];\n      this.configuracao = {};\n      this.isLoading = false;\n    }\n\n    ngOnInit() {\n      this.loadConfiguracoes();\n    }\n\n    loadConfiguracoes() {\n      this.configuracaoService.configuracoes$.subscribe(data => {\n        this.configuracoes = data;\n      });\n    }\n\n    toggleAtivo(config) {\n      this.isLoading = true;\n      this.spiner.show();\n      config.ativo = !config.ativo;\n      this.configuracao = config;\n      this.configuracaoService.updateConfiguracao(this.configuracao).subscribe(() => {\n        this.configuracaoService.refreshConfiguracao(config);\n        this.toaster.success('Configuração Alterada com Sucesso', 'Sucesso!');\n      }, error => {\n        console.error(error);\n        this.toaster.error('Erro ao alterar a Configuração', 'Error');\n        config.ativo = !config.ativo;\n      }).add(() => this.spiner.hide());\n      this.isLoading = false;\n    }\n\n  }\n\n  ConfiguracaoComponent.ɵfac = function ConfiguracaoComponent_Factory(t) {\n    return new (t || ConfiguracaoComponent)(i0.ɵɵdirectiveInject(i1.ConfiguracaoService), i0.ɵɵdirectiveInject(i2.NgxSpinnerService), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n\n  ConfiguracaoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConfiguracaoComponent,\n    selectors: [[\"app-configuracao\"]],\n    decls: 4,\n    vars: 4,\n    consts: [[3, \"titulo\", \"iconclass\", \"botaolistar\"], [1, \"card\", \"rounded\", \"shadow-md\", \"p-3\"], [1, \"row\"], [\"class\", \"col-12 mb-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-12\", \"mb-2\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"form-check\", \"form-switch\"], [\"type\", \"checkbox\", \"id\", \"flexSwitchCheckDefault\", 1, \"form-check-input\", 3, \"checked\", \"change\"]],\n    template: function ConfiguracaoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-Titulo\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtemplate(3, ConfiguracaoComponent_div_3_Template, 6, 2, \"div\", 3);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"titulo\", \"Configura\\u00E7\\u00F5es\")(\"iconclass\", \"fa-solid fa-gear\")(\"botaolistar\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.configuracoes);\n      }\n    },\n    directives: [i4.TituloComponent, i5.NgForOf],\n    styles: [\"\"]\n  });\n  return ConfiguracaoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}