// <auto-generated />
using System;
using FFStats.Persistence.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FFStats.Persistence.Migrations
{
    [DbContext(typeof(FFStatsContext))]
    [Migration("20220709223502_newDb")]
    partial class newDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("FFStats.Domain.Models.Call", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("callCidade")
                        .HasColumnType("TEXT");

                    b.Property<int>("mapaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("mapaId");

                    b.ToTable("tb_call");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Estatisticas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Assistencia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cura")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Dano")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Derrubado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kill")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Levantados")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Morte")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ressucitou")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tempo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("jogadorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("partidaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("jogadorId");

                    b.HasIndex("partidaId");

                    b.ToTable("tb_estatistica");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Jogador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("idJogo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("jogadorNick")
                        .HasColumnType("TEXT");

                    b.Property<string>("jogadorNome")
                        .HasColumnType("TEXT");

                    b.Property<int>("lineId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("lineId");

                    b.ToTable("tb_jogador");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Line", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("lineNome")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("tb_Line");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Mapa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("mapaNome")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("tb_mapa");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Modo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("modoDescricao")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("tb_modo");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Partida", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("callId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("mapaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("modoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("partidaData")
                        .HasColumnType("TEXT");

                    b.Property<string>("partidaDescricao")
                        .HasColumnType("TEXT");

                    b.Property<int>("posicao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("submodoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("treinoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("callId");

                    b.HasIndex("mapaId");

                    b.HasIndex("modoId");

                    b.HasIndex("submodoId");

                    b.HasIndex("treinoId");

                    b.ToTable("tb_partida");
                });

            modelBuilder.Entity("FFStats.Domain.Models.PartidaJogador", b =>
                {
                    b.Property<int>("PartidaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JogadorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PartidaId", "JogadorId");

                    b.HasIndex("JogadorId");

                    b.ToTable("tb_partidajogador");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Submodo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("modoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("submodoDescricao")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("modoId");

                    b.ToTable("tb_submodo");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Treino", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("treinoDescricao")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("tb_treino");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Call", b =>
                {
                    b.HasOne("FFStats.Domain.Models.Mapa", "mapa")
                        .WithMany("Calls")
                        .HasForeignKey("mapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mapa");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Estatisticas", b =>
                {
                    b.HasOne("FFStats.Domain.Models.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("jogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FFStats.Domain.Models.Partida", "Partida")
                        .WithMany("Estatisticas")
                        .HasForeignKey("partidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogador");

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Jogador", b =>
                {
                    b.HasOne("FFStats.Domain.Models.Line", "Line")
                        .WithMany("Jogadores")
                        .HasForeignKey("lineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Partida", b =>
                {
                    b.HasOne("FFStats.Domain.Models.Call", "call")
                        .WithMany()
                        .HasForeignKey("callId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FFStats.Domain.Models.Mapa", "mapa")
                        .WithMany()
                        .HasForeignKey("mapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FFStats.Domain.Models.Modo", "modo")
                        .WithMany()
                        .HasForeignKey("modoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FFStats.Domain.Models.Submodo", "sumodo")
                        .WithMany()
                        .HasForeignKey("submodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FFStats.Domain.Models.Treino", "treino")
                        .WithMany("Partidas")
                        .HasForeignKey("treinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("call");

                    b.Navigation("mapa");

                    b.Navigation("modo");

                    b.Navigation("sumodo");

                    b.Navigation("treino");
                });

            modelBuilder.Entity("FFStats.Domain.Models.PartidaJogador", b =>
                {
                    b.HasOne("FFStats.Domain.Models.Jogador", "Jogador")
                        .WithMany("PartidasJogadores")
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FFStats.Domain.Models.Partida", "Partida")
                        .WithMany("PartidasJogadores")
                        .HasForeignKey("PartidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogador");

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Submodo", b =>
                {
                    b.HasOne("FFStats.Domain.Models.Modo", "modo")
                        .WithMany("SubModos")
                        .HasForeignKey("modoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modo");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Jogador", b =>
                {
                    b.Navigation("PartidasJogadores");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Line", b =>
                {
                    b.Navigation("Jogadores");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Mapa", b =>
                {
                    b.Navigation("Calls");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Modo", b =>
                {
                    b.Navigation("SubModos");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Partida", b =>
                {
                    b.Navigation("Estatisticas");

                    b.Navigation("PartidasJogadores");
                });

            modelBuilder.Entity("FFStats.Domain.Models.Treino", b =>
                {
                    b.Navigation("Partidas");
                });
#pragma warning restore 612, 618
        }
    }
}
